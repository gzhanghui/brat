@font-face {
  font-family: 'Liberation Sans';
  font-style: normal;
  font-weight: normal;
  src:
    local('Liberation Sans'),
    local('Liberation-Sans'),
    url('./fonts/Liberation_Sans-Regular.ttf') format('truetype');
}

@font-face {
  font-family: 'PT Sans Caption';
  font-style: normal;
  font-weight: normal;
  src:
    local('PT Sans Caption'),
    local('PTSans-Caption'),
    url('./fonts/PT_Sans-Caption-Web-Regular.ttf') format('truetype');
}

#svg {
  margin: 34px auto 100px;
  padding: 20px;
  svg.canvas {
    width: 100%;
    height: 1px;
    border: 1px solid  rgba(var(--bs-primary-rgb), .75);
  }
  text {
    font-size: 14px;
    font-family: 'Liberation Sans', Verdana, Arial, Helvetica, sans-serif;
  }
  text[data-arc-role] {
    user-select: none;
  }
  path {
    pointer-events: none;
  }
  .span {
    text {
      font-size: 10px;
      text-anchor: middle;
      font-family: 'PT Sans Caption', sans-serif;
      pointer-events: none;
    }
    path {
      fill: none;
      &.curly {
        stroke-width: 0.5;
      }
      &.boxcross {
        stroke: black;
        opacity: 0.5;
      }
    }
  }
}

.glyph {
  font-family: sans-serif;
  font-weight: bold;
}

rect.Normalized {
  stroke-width: 1.5;
}

rect.shadow_EditHighlight {
  fill: #ffff99;
}

.arcs path {
  stroke: #989898;
  fill: none;
  stroke-width: 1;
}

.arcs .highlight path {
  stroke: #000000;
  stroke-width: 1.5;
  opacity: 1;
}

.arcs .highlight text {
  stroke: black;
  fill: black;
  stroke-width: 0.5;
}

.span.highlight rect {
  stroke-width: 2px;
}

.arcs .reselect path {
  stroke-width: 2px;
  stroke: #ff0000 !important;
}

.arcs .reselect text {
  fill: #ff0000 !important;
}

.arcs text {
  font-size: 9px;
  text-anchor: middle;
  font-family: 'PT Sans Caption', sans-serif;
  cursor: default;
}

.background0 {
  stroke: none;
  fill: #ffffff;
}

.background1 {
  stroke: none;
  fill: rgba(233,236,239,0.85);
}

.sentnum text {
  fill: #999999;
  text-anchor: end;
}

.sentnum path {
  stroke: #999999;
  stroke-width: 1px;
}

.span_cue {
  fill: #eeeeee !important;
}

.drag_stroke {
  stroke: black;
}

.drag_fill {
  fill: black;
}

.unselectable {
  user-select: none;
  cursor: default;
}

.shadow {
  box-shadow: 5px 5px 5px #444444;
}

$shadow-colors: (
  'AddedAnnotation': #ff4141,
  'EditHighlight_arc': #ffff99,
  'MissingAnnotation': #ff41414d,
  'ChangedAnnotation': #ff4141,
  'False_negative': #c20000,
  'True_positive': #00ff00,
  'False_positive': #ff4141,
  'AnnotationError': #ff0000,
  'AnnotationWarning': #ff8800,
  'AnnotatorNotes': #3ab7ee,
  'Normalized': #3aee37,
  'AnnotationUnconfirmed': #eeeeee,
  'AnnotationIncomplete': #aaaaaa,
);
@each $class, $color in $shadow-colors {
  .shadow_#{$class} {
    fill: $color;
  }
}

.popup {
  font-family: 'Liberation Sans', Verdana, Arial, Helvetica, sans-serif;
  position: fixed;
  top: 0;
  left: 0;
  opacity: 0.95;
  padding: 10px;
  display: none;
  border: 1px outset #000000;
  background-color: #f5f5f9;
  color: #000000;
  z-index: 20;
  box-shadow: 5px 5px 5px #aaaaaa;
  border-radius: 3px;
  max-width: 80%;
}

// 定义一个映射来存储各类评论的状态与对应的颜色
$popup-colors: (
  'False_positive': #ff4141,
  'AddedAnnotation': #ffcccc,
  'ChangedAnnotation': #ffcccc,
  'MissingAnnotation': #ffcccc,
  'False_negative': #c20000,
  'AnnotationError': #ff7777,
  'AnnotationWarning': #ff9900,
  'AnnotatorNotes': #d7e7ee,
  'Normalized': #d7eee7,
  'AnnotationIncomplete': #ffff77,
  'AnnotationUnconfirmed': #ddddff,
);

@each $popup-type, $color in $popup-colors {
  .popup.comment_#{$popup-type} {
    background-color: $color;
  }
}

$stroke-width-default: 0.75;
$stroke-width-thick: 2;
$stroke-width-thin: 0.5;

.span rect {
  stroke-width: $stroke-width-default;

  &.False_positive,
  &.AddedAnnotation {
    stroke: #ff4141;
    stroke-width: $stroke-width-thick;
  }

  &.False_negative {
    stroke: #c20000;
    fill: #ffffff;
    stroke-width: $stroke-width-thick;
  }

  &.AnnotationError,
  &.AnnotationWarning {
    stroke-width: 1;
  }

  &.AnnotationIncomplete,
  &.AnnotationUnconfirmed {
    stroke: #002200;
    stroke-width: $stroke-width-thin;
    fill: #ffffff;

    &.AnnotationUnconfirmed {
      opacity: 0.5;
    }
  }

  &.True_positive {
    stroke: #007700;
  }

  &.reselect,
  &.reselectTarget {
    stroke-width: 2px;
  }

  &.badTarget {
    stroke: #f00;
  }

  &.MissingAnnotation {
    stroke: #ffffff;
    stroke-width: $stroke-width-thick;

    + text {
      opacity: 0.5;
    }
  }

  &.ChangedAnnotation {
    stroke: #ffff99;
    stroke-width: $stroke-width-thick;
  }
}
